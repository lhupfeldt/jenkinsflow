<?py from jenkinsflow.test.cfg import ApiType ?>
<?py import os ?>
[report]
fail_under = {==fail_under==}

exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    # utility scripts
    # This is hopefully covered by a subprocess call, but it won't be collected
    if __name__ == "__main__":

    # The alternative (original) rest api is no longer tested
    def _check_restkit_response
    class RestkitRestApi

    <?py if ApiType.JENKINS in api_types: ?>
    <?py if os.environ.get('HUDSON_URL'): ?>
    # Parts of jenkins_api not used when hudson
    if self.jenkins.is_jenkins
    if head_response.get\("X-Jenkins"\)
    <?py else: ?>
    # Parts of jenkins_api not used when jenkins
    else:  # Hudson
    self.is_jenkins = False
    if head_response.get\("X-Hudson"\)
    <?py #endif ?>
    <?py #endif ?>

    <?py if api_types == [ApiType.SCRIPT]: ?>
    # Parts of api_base not used in script_api (overridden methods)
    return (self.job.public_uri + '/' + repr(self.build_number) + '/console')
    <?py #endif ?>

omit = 
     {==top_dir==}/.tox/*
     {==top_dir==}/.eggs/*
     {==top_dir==}/test/*
     {==top_dir==}/demo/*
     {==top_dir==}/visual/server.py
     {==top_dir==}/setup.py
     {==top_dir==}/ordered_enum.py
     *_flymake.py
     <?py if ApiType.JENKINS not in api_types: ?>
     {==top_dir==}/jenkins_api.py
     <?py #endif ?>
     <?py if ApiType.SCRIPT not in api_types: ?>
     {==top_dir==}/script_api.py
     <?py #endif ?>
